{"version":3,"sources":["./src/app/worker-code/worker-code.module.ts","./src/environments/environment.ts","./src/app/state.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/worker-code/worker-code.component.ts","./src/app/worker-code/worker-code.component.html","./src/app/codemirror/codemirror.module.ts","./src/app/app-routing.module.ts","./src/app/codemirror/codemirror.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WorkerCodeComponent } from './worker-code.component';\nimport {CodemirrorModule} from '../codemirror/codemirror.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\n\n\n\n@NgModule({\n  declarations: [WorkerCodeComponent],\n  exports: [\n    WorkerCodeComponent\n  ],\n  imports: [\n    CommonModule,\n    CodemirrorModule,\n    MatButtonModule,\n    MatInputModule\n  ]\n})\nexport class WorkerCodeModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nimport * as localforage from 'localforage';\nimport {BehaviorSubject} from 'rxjs';\nimport {uuid} from '@gewd/utils';\n\nexport interface Project {\n  id: string;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  projects$ = new BehaviorSubject<Project[]>([]);\n\n  constructor() {\n    this.initializeData();\n  }\n\n  public addNewProject(name: string): void {\n    this.projects$.next([...this.projects$.getValue(), {\n      id: uuid(),\n      name,\n    }]);\n\n    this.saveToLocalForage();\n  }\n\n\n  renameProject(id: string, newName: string): void {\n    const stateProject = this.projects$.value.find(p => p.id === id);\n\n    if (stateProject) {\n      stateProject.name = newName;\n      this.saveToLocalForage();\n    }\n  }\n\n\n  deleteProject(id: string): void {\n    const projects = this.projects$.value;\n    const stateProjectIndex = projects.findIndex(p => p.id === id);\n\n    if (stateProjectIndex !== -1) {\n      projects.splice(stateProjectIndex, 1);\n\n      this.projects$.next(projects);\n      this.saveToLocalForage();\n    }\n  }\n\n  public async getWorkerCode(projectId: string): Promise<string> {\n    const projectForage = this.getProjectForage(projectId);\n\n    await projectForage.ready();\n\n    return await projectForage.getItem<string>('worker_code') ?? '';\n  }\n\n  public async setWorkerCode(projectId: string, workerCode: string): Promise<void> {\n    const projectForage = this.getProjectForage(projectId);\n\n    await projectForage.ready();\n\n    projectForage.setItem<string>('worker_code', workerCode);\n  }\n\n  private getProjectForage(projectId: string): LocalForage {\n    return localforage.createInstance({\n      name: `project/${projectId}`\n    });\n  }\n\n  private async initializeData(): Promise<void> {\n    await localforage.ready();\n\n    const projects = await localforage.getItem<Project[]>('projects');\n\n    this.projects$.next(projects ?? []);\n  }\n\n  private saveToLocalForage (): void {\n    localforage.setItem<Project[]>('projects', this.projects$.value);\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {Project, StateService} from './state.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  projects$ = this.state.projects$;\n\n  selectedProject: Project | null = null;\n\n  constructor(private state: StateService) {\n  }\n\n  addNewProject(): void {\n    var newName = prompt('New Project Name');\n\n    if (newName) {\n      this.state.addNewProject(newName);\n    }\n  }\n\n  selectProject(project: Project): void {\n    this.selectedProject = project;\n  }\n\n  editProjectName(): void {\n    if (!this.selectedProject) {\n      return;\n    }\n\n    const newName = prompt('New Projects Name: ');\n\n    if (newName) {\n      this.state.renameProject(this.selectedProject.id, newName);\n    }\n  }\n\n  deleteProject(): void {\n    if (!this.selectedProject) {\n      return;\n    }\n\n    if (confirm('Do you want to delete this Project?')) {\n      this.state.deleteProject(this.selectedProject.id);\n      this.selectedProject = null;\n    }\n  }\n}\n","<mat-drawer-container class=\"example-container\">\n  <mat-drawer mode=\"side\" opened>\n    <mat-action-list>\n      <h3>\n        Projects\n\n        <button mat-icon-button (click)=\"addNewProject()\">+</button>\n      </h3>\n\n\n      <button *ngFor=\"let project of projects$|async\"\n              mat-list-item [class.selected]=\"project.id === selectedProject?.id\"\n              (click)=\"selectProject(project)\">\n        {{ project.name }}\n      </button>\n    </mat-action-list>\n\n  </mat-drawer>\n  <mat-drawer-content>\n    <div *ngIf=\"selectedProject != null\"\n         class=\"project-content\">\n      <h2>{{selectedProject.name}}</h2>\n\n      <button mat-raised-button (click)=\"editProjectName()\">Edit</button>\n      <button mat-raised-button (click)=\"deleteProject()\">Delete</button>\n\n      <app-worker-code [projectId]=\"selectedProject.id\">\n\n      </app-worker-code>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {CodemirrorModule} from './codemirror/codemirror.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {WorkerCodeModule} from './worker-code/worker-code.module';\nimport {MatListModule} from '@angular/material/list';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CodemirrorModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    WorkerCodeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {srcToBlobUrl} from '@gewd/utils/worker';\nimport {StateService} from '../state.service';\n\n@Component({\n  selector: 'app-worker-code',\n  templateUrl: './worker-code.component.html',\n  styleUrls: ['./worker-code.component.scss']\n})\nexport class WorkerCodeComponent implements OnInit, OnChanges {\n  @Input()\n  projectId = '';\n\n  webworkerCreated = false;\n  worker: Worker | null = null;\n\n  responses: string[] = [];\n\n  currentCode = '';\n\n  constructor(private state: StateService) {\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.readFromState();\n  }\n\n  ngOnChanges({projectId}: SimpleChanges): void {\n    if (projectId) {\n      this.stopWorker();\n      this.clearResponses();\n      this.readFromState();\n    }\n  }\n\n  updatedCode($event: string): void {\n\n    this.currentCode = $event;\n    this.saveToState();\n  }\n\n  createWorker(): void {\n    const webWorkerBlobUrl = srcToBlobUrl('superWorker.js', this.currentCode);\n\n    try {\n      this.worker = new Worker(webWorkerBlobUrl);\n      this.worker.onmessage = (e) => {\n        this.responses.push(`<<  ${e.data}`);\n\n        console.log('Message received from worker', e.data);\n      };\n      this.worker.onmessageerror = ev => {\n        this.responses.push('ERR ' + ev.data);\n\n        console.log('Error received from worker', ev.data);\n      };\n      this.worker.onerror = ev => {\n        this.responses.push('ERR ' + JSON.stringify({\n          message: ev.message\n        }));\n      };\n\n      this.webworkerCreated = true;\n    } catch (ex) {\n      this.responses.push(ex);\n    }\n  }\n\n  stopWorker(): void {\n    this.worker?.terminate();\n    this.webworkerCreated = false;\n  }\n\n  postMessage(value: string): void {\n    if (!this.webworkerCreated) {\n      return;\n    }\n\n    this.worker?.postMessage(value);\n\n    this.responses.push('>> ' + value);\n  }\n\n  clearResponses(): void {\n    this.responses.length = 0;\n  }\n\n  private async readFromState(): Promise<void> {\n    try {\n      const value = await this.state.getWorkerCode(this.projectId);\n\n      this.currentCode = value ?? '';\n    } catch (err) {\n      // This code runs if there were any errors.\n      console.log(err);\n    }\n  }\n\n  private saveToState(): void {\n    this.state.setWorkerCode(this.projectId, this.currentCode);\n  }\n}\n","\n<h3>Worker Code:</h3>\n\n<app-codemirror [value]=\"currentCode\"\n                (changed)=\"updatedCode($event)\"\n>\n\n</app-codemirror>\n\n\n<h3>Actions</h3>\n\n<button (click)=\"createWorker()\"\n        [disabled]=\"webworkerCreated\"\n        mat-raised-button\n>\n  Create Worker\n</button>\n\n\n<button (click)=\"stopWorker()\"\n        [disabled]=\"!webworkerCreated\"\n        mat-raised-button\n>\n  Stop Worker\n</button>\n\n<h4>Send Message</h4>\n\n<mat-form-field class=\"example-full-width\">\n  <mat-label>Message to the Worker</mat-label>\n\n  <input type=\"text\" autocomplete=\"off\"\n         matInput\n         [disabled]=\"!webworkerCreated\"\n         #postMessageInput>\n</mat-form-field>\n\n<button (click)=\"postMessage(postMessageInput.value)\"\n        [disabled]=\"!webworkerCreated\"\n        mat-raised-button >\n  Send\n</button>\n\n<h3> Responses: </h3>\n<button mat-raised-button (click)=\"clearResponses()\">clear</button>\n<pre>\n  {{ responses | json }}\n</pre>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodemirrorComponent } from './codemirror.component';\n\n\n\n@NgModule({\n  declarations: [CodemirrorComponent],\n  exports: [\n    CodemirrorComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CodemirrorModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, EventEmitter, Output} from '@angular/core';\nimport {EditorView, keymap} from '@codemirror/next/view';\nimport {EditorState} from '@codemirror/next/state';\nimport {HighlightStyle, tags} from '@codemirror/next/highlight';\nimport {javascriptLanguage} from '@codemirror/next/lang-javascript';\nimport { oneDarkTheme} from '@codemirror/next/theme-one-dark';\nimport {indentOnInput} from '@codemirror/next/language';\nimport {defaultKeymap, indentLess, indentMore} from '@codemirror/next/commands';\nimport {autocompletion, completionKeymap} from '@codemirror/next/autocomplete';\n\n\nconst myStyle = HighlightStyle.define(\n  {tag: tags.variableName, color: 'green'},\n  {tag: tags.definition(tags.variableName), color: 'yellow'},\n  {tag: tags.definitionKeyword, color: 'fuchsia'},\n);\n\n\n@Component({\n  selector: 'app-codemirror',\n  templateUrl: './codemirror.component.html',\n  styleUrls: ['./codemirror.component.scss']\n})\nexport class CodemirrorComponent implements OnInit, OnChanges {\n\n  private codeMirrorView: EditorView | null = null;\n\n  @Input()\n  public value = '';\n\n  @Output()\n  public changed = new EventEmitter<string>();\n\n  constructor(private element: ElementRef<HTMLElement>) { }\n\n  ngOnInit(): void {\n    this.codeMirrorView = new EditorView({\n      state: EditorState.create({\n        doc: this.value,\n        extensions: [\n          // overrides first..\n          oneDarkTheme,\n\n          myStyle,\n          javascriptLanguage,\n\n          autocompletion(),\n          keymap.of([\n            ...defaultKeymap,\n            ...completionKeymap,\n            {\n              key: 'Tab',\n              preventDefault: true,\n              run: indentMore,\n            },\n            {\n              key: 'Shift-Tab',\n              preventDefault: true,\n              run: indentLess,\n            },\n          ]),\n\n          indentOnInput(),\n          // The basic setup needs to be at the end DUH\n          // basicSetup,\n          EditorState.changeFilter.of((tr) => {\n            if (tr.docChanged) {\n              this.value = tr.newDoc.toJSON().join('\\n');\n\n              this.changed.emit(this.value);\n            }\n\n            return true;\n          })\n        ]}),\n      parent: this.element.nativeElement\n    });\n\n\n  }\n\n  ngOnChanges({value}: SimpleChanges): void {\n    if (value) {\n      const currentEditorValue = this.codeMirrorView?.state.doc.toJSON().join('\\n');\n\n      if (currentEditorValue !== value.currentValue) {\n        const transaction = this.codeMirrorView?.state.update({\n          changes: {from: 0, to: this.codeMirrorView?.state.doc.length, insert: value.currentValue}\n        });\n        if (transaction) {\n          this.codeMirrorView?.dispatch(transaction);\n        }\n      }\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}